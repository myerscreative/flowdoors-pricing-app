// FlowDoors Firestore Security Rules
// Deploy to new Firebase project: firebase deploy --only firestore:rules
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isSignedIn() && 
             request.auth.token.role in ['administrator', 'manager', 'admin'];
    }
    
    function isSalesOrAdmin() {
      return isSignedIn() && 
             request.auth.token.role in ['administrator', 'manager', 'admin', 'salesperson'];
    }
    
    function isMarketing() {
      return isSignedIn() && 
             request.auth.token.role in ['administrator', 'manager', 'marketing'];
    }
    
    // TEMPORARY DEV BYPASS: Allow unauthenticated access for development
    function isDevelopment() {
      return true; // TODO: Remove this in production!
    }
    
    // Quotes collection
    match /quotes/{quoteId} {
      // Anyone can create quotes (for the quoter tool)
      allow create: if true;
      
      // Sales and admin can read and update quotes (+ temp dev access)
      allow read: if isSalesOrAdmin() || isDevelopment();
      allow update: if isSalesOrAdmin() || isDevelopment();
      
      // Only admins can delete (+ temp dev access)
      allow delete: if isAdmin() || isDevelopment();
    }
    
    // Quote counters
    match /quote_counters/{counterId} {
      allow read: if true;
      allow write: if true; // Controlled by server logic
    }
    
    // Deleted quotes
    match /deleted_quotes/{quoteId} {
      allow read: if isAdmin() || isDevelopment();
      allow write: if isAdmin() || isDevelopment();
    }
    
    // Leads collection
    match /leads/{leadId} {
      allow create: if true; // Public form submissions
      allow read: if isMarketing() || isDevelopment();
      allow update: if isMarketing() || isDevelopment();
      allow delete: if isAdmin() || isDevelopment();
    }
    
    // Salespeople collection
    match /salespeople/{salespersonId} {
      allow read: if isSignedIn() || isDevelopment();
      allow write: if isAdmin() || isDevelopment();
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isSignedIn() || isDevelopment();
      allow write: if (isAdmin() || request.auth.uid == userId) || isDevelopment();
    }
    
    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

